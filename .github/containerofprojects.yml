# on:
#   push:
#     branches:
#     - main
# env:
#   DOTNET_CORE_VERSION: 7.0.x
#   CONTAINER_REGISTRY_LOGIN_SERVER: containerofprojectsregistry.azurecr.io
#   CONTAINER_APP_NAME: containerofprojects
#   CONTAINER_APP_RESOURCE_GROUP_NAME: Portfolio
#   CONTAINER_APP_CONTAINER_NAME: containerapp
# jobs:
#   PortfolioClient:
#     runs-on: ubuntu-latest
#     steps:
#     - name: Checkout source code
#       uses: actions/checkout@v3
#     - name: Setup .NET SDK
#       uses: actions/setup-dotnet@v3
#       with:
#         dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
#     - name: Login to Azure container registry
#       uses: azure/docker-login@v1
#       with:
#         login-server: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}
#         username: ${{ secrets.containerofprojectsregistry_USERNAME_1D88 }}
#         password: ${{ secrets.containerofprojectsregistry_PASSWORD_1D88 }}
#     - name: Build and push image to Azure container registry
#       run: dotnet publish Client/Portfolio.Client.csproj -c Release -r linux-x64 -p:PublishProfile=DefaultContainer -p:ContainerImageTag=${{ github.sha }} --no-self-contained -p:ContainerRegistry=${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }} -bl
#     - name: Upload artifact
#       uses: actions/upload-artifact@v3
#       with:
#         name: binlog
#         path: msbuild.binlog
#     - name: Azure login
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.containerofprojects_SPN }}
#     - name: Deploy to Azure container app
#       uses: azure/CLI@v1
#       with:
#         inlineScript: >-
#           az config set extension.use_dynamic_install=yes_without_prompt
#
#           az containerapp registry set --name ${{ env.CONTAINER_APP_NAME }} --resource-group ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} --server ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }} --username ${{ secrets.containerofprojectsregistry_USERNAME_7962 }} --password ${{ secrets.containerofprojectsregistry_PASSWORD_7962 }}
#
#           az containerapp update --name ${{ env.CONTAINER_APP_NAME }} --container-name ${{ env.CONTAINER_APP_CONTAINER_NAME }} --resource-group ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} --image ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/portfolio.client:${{ github.sha }}
#     - name: Azure logout
#       run: az logout
#   PortfolioServer:
#     runs-on: ubuntu-latest
#     needs: PortfolioClient
#     steps:
#     - name: Checkout source code
#       uses: actions/checkout@v3
#     - name: Setup .NET SDK
#       uses: actions/setup-dotnet@v3
#       with:
#         dotnet-version: ${{ env.DOTNET_CORE_VERSION }}
#     - name: Login to Azure container registry
#       uses: azure/docker-login@v1
#       with:
#         login-server: ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}
#         username: ${{ secrets.containerofprojectsregistry_USERNAME_7962 }}
#         password: ${{ secrets.containerofprojectsregistry_PASSWORD_7962 }}
#     - name: Build and push image to Azure container registry
#       run: dotnet publish Server/Portfolio.Server.csproj -c Release -r linux-x64 -p:PublishProfile=DefaultContainer -p:ContainerImageTag=${{ github.sha }} --no-self-contained -p:ContainerRegistry=${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }} -bl
#     - name: Upload artifact
#       uses: actions/upload-artifact@v3
#       with:
#         name: binlog
#         path: msbuild.binlog
#     - name: Azure login
#       uses: azure/login@v1
#       with:
#         creds: ${{ secrets.containerofprojects_SPN }}
#     - name: Deploy to Azure container app
#       uses: azure/CLI@v1
#       with:
#         inlineScript: >-
#           az config set extension.use_dynamic_install=yes_without_prompt
#
#           az containerapp registry set --name ${{ env.CONTAINER_APP_NAME }} --resource-group ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} --server ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }} --username ${{ secrets.containerofprojectsregistry_USERNAME_7962 }} --password ${{ secrets.containerofprojectsregistry_PASSWORD_7962 }}
#
#           az containerapp update --name ${{ env.CONTAINER_APP_NAME }} --container-name ${{ env.CONTAINER_APP_CONTAINER_NAME }} --resource-group ${{ env.CONTAINER_APP_RESOURCE_GROUP_NAME }} --image ${{ env.CONTAINER_REGISTRY_LOGIN_SERVER }}/portfolio.server:${{ github.sha }}
#     - name: Azure logout
#       run: az logout
